package com.baulu.announcement.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnnouncementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementAllPropertiesEquals(Announcement expected, Announcement actual) {
        assertAnnouncementAutoGeneratedPropertiesEquals(expected, actual);
        assertAnnouncementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementAllUpdatablePropertiesEquals(Announcement expected, Announcement actual) {
        assertAnnouncementUpdatableFieldsEquals(expected, actual);
        assertAnnouncementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementAutoGeneratedPropertiesEquals(Announcement expected, Announcement actual) {
        assertThat(expected)
            .as("Verify Announcement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementUpdatableFieldsEquals(Announcement expected, Announcement actual) {
        assertThat(expected)
            .as("Verify Announcement relevant properties")
            .satisfies(e -> assertThat(e.getLanguage()).as("check language").isEqualTo(actual.getLanguage()))
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()))
            .satisfies(e -> assertThat(e.getAnnouncementType()).as("check announcementType").isEqualTo(actual.getAnnouncementType()))
            .satisfies(e -> assertThat(e.getAnnouncementData()).as("check announcementData").isEqualTo(actual.getAnnouncementData()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnnouncementUpdatableRelationshipsEquals(Announcement expected, Announcement actual) {}
}
